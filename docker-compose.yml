version: '3.8'

networks:
  syntextai_network:
    driver: bridge

services:

  # Main app (frontend + backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: syntextaiapp
    restart: unless-stopped
    env_file: .env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # Frontend/Firebase
      - REACT_APP_FIREBASE_API_KEY
      - REACT_APP_FIREBASE_AUTH_DOMAIN
      - REACT_APP_FIREBASE_PROJECT_ID
      - REACT_APP_FIREBASE_STORAGE_BUCKET
      - REACT_APP_FIREBASE_MESSAGING_SENDER_ID
      - REACT_APP_FIREBASE_APP_ID
      - REACT_APP_STRIPE_API_KEY
      - REACT_APP_POST_HOG_API_KEY
      # Backend Firebase Admin
      - FIREBASE_PROJECT_ID
      - FIREBASE_PRIVATE_KEY
      - FIREBASE_CLIENT_EMAIL
      - FIREBASE_PRIVATE_KEY_ID
      - FIREBASE_CLIENT_ID
      - FIREBASE_CLIENT_CERT_URL
      - FIREBASE_AUTH_URI
      - FIREBASE_TOKEN_URI
      - FIREBASE_AUTH_PROVIDER_CERT_URL
    volumes:
      - ./api/config:/app/api/config:ro
      - /app/node_modules
    networks:
      - syntextai_network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  # Worker for background tasks
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: syntextai-worker
    restart: unless-stopped
    env_file: .env
    command: python -m api.worker
    environment:
      - NODE_ENV=production
      # Backend Firebase Admin
      - FIREBASE_PROJECT_ID
      - FIREBASE_PRIVATE_KEY
      - FIREBASE_CLIENT_EMAIL
      - FIREBASE_PRIVATE_KEY_ID
      - FIREBASE_CLIENT_ID
      - FIREBASE_CLIENT_CERT_URL
      - FIREBASE_AUTH_URI
      - FIREBASE_TOKEN_URI
      - FIREBASE_AUTH_PROVIDER_CERT_URL
    volumes:
      - ./api/config:/app/api/config:ro
    networks:
      - syntextai_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  # SearxNG search engine
  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - INSTANCE_NAME=SynTextAI
      - BASE_URL=http://localhost/search/
      - AUTOCOMPLETE=google
      - ULTRA_SECRET_KEY=${SEARXNG_SECRET_KEY}
      - SEARXNG_SETTINGS_PATH=/etc/searxng/settings.yml
    volumes:
      - ./searxng:/etc/searxng:ro
    networks:
      - syntextai_network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
