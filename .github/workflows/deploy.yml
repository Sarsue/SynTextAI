name: Deploy SynTextAI

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Deployment message'
        required: false
        default: 'Manual deployment'

env:
  DOCKER_IMAGE: osasdeeon/syntextai
  DOCKER_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,format=long

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_STRIPE_API_KEY=${{ secrets.REACT_APP_STRIPE_API_KEY }}
          REACT_APP_POST_HOG_API_KEY=${{ secrets.REACT_APP_POST_HOG_API_KEY }}
          FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }}
          FIREBASE_CLIENT_CERT_URL=${{ secrets.FIREBASE_CLIENT_CERT_URL }}
        secrets: |
          FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}

    - name: Copy deployment files
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        source: "deploy.sh,docker-compose.yml"
        target: "/root/app/"

    - name: Deploy application
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          cd /root/app
          chmod +x deploy.sh
          ./deploy.sh

    - name: Verify deployment
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          docker ps
          curl -I https://syntextai.com || true
        script_stop: true
        script: |
          cd /root/
          
          # Copy necessary files
          if [ -d "app" ]; then
            echo "Updating existing app directory..."
            cd app
            git pull
          else
            echo "Cloning repository..."
            git clone https://github.com/${{ github.repository }}.git app
            cd app
          fi
          
          # Make deploy script executable
          chmod +x deploy.sh
          
          # Export required environment variables
          export FIREBASE_PROJECT_ID='${{ secrets.FIREBASE_PROJECT_ID }}'
          export FIREBASE_CLIENT_EMAIL='${{ secrets.FIREBASE_CLIENT_EMAIL }}'
          export FIREBASE_PRIVATE_KEY='${{ secrets.FIREBASE_PRIVATE_KEY }}'
          export FIREBASE_PRIVATE_KEY_ID='${{ secrets.FIREBASE_PRIVATE_KEY_ID }}'
          export FIREBASE_CLIENT_ID='${{ secrets.FIREBASE_CLIENT_ID }}'
          export FIREBASE_CLIENT_CERT_URL='${{ secrets.FIREBASE_CLIENT_CERT_URL }}'
          
          # Run the deploy script
          ./deploy.sh